sequenceDiagram
    participant Client
    participant Mesh as GraphQL Mesh Gateway
    participant Stitching as Schema-stitching Gateway
    participant Hive as Hive Gateway
    participant Registry as Schema Registry
    participant UserService
    participant UserDB as User Database
    participant ExpenseService
    participant ExpenseDB as Expense Database
    
    Client->>Mesh: GraphQL Query
    Mesh->>Mesh: Parse & Plan Query
    
    alt Query requires User data
        Mesh->>UserService: Batch User Requests
        UserService->>UserService: Check DataLoader Cache
        
        alt Cache Hit
            UserService-->>Mesh: Return Cached Data
        else Cache Miss
            UserService->>UserDB: Fetch from DB
            UserDB-->>UserService: Return DB Data
            UserService->>UserService: Update Cache
            UserService-->>Mesh: Return Fresh Data
        end
    end
    
    alt Query requires Expense data
        Mesh->>ExpenseService: Batch Expense Requests
        ExpenseService->>ExpenseService: Check DataLoader Cache
        
        alt Cache Hit
            ExpenseService-->>Mesh: Return Cached Data
        else Cache Miss
            ExpenseService->>ExpenseDB: Fetch from DB
            ExpenseDB-->>ExpenseService: Return DB Data
            
            alt Expenses need User data
                ExpenseService->>UserService: Batch User Lookup
                UserService->>UserService: Check DataLoader Cache
                
                alt User Cache Hit
                    UserService-->>ExpenseService: Return Cached User Data
                else User Cache Miss
                    UserService->>UserDB: Fetch from DB
                    UserDB-->>UserService: Return DB Data
                    UserService->>UserService: Update Cache
                    UserService-->>ExpenseService: Return Fresh User Data
                end
                
                ExpenseService->>ExpenseService: Cache Results
            end
            
            ExpenseService-->>Mesh: Return Fresh Data
        end
    end
    
    Mesh-->>Client: Combined Response
    
    Note over Client,ExpenseDB: Similar flow for Schema-stitching Gateway with some differences
    
    Client->>Stitching: GraphQL Query
    Stitching->>Stitching: Check Schema Cache TTL
    Stitching->>Stitching: Plan & Delegate to Services
    
    alt Query requires User data
        Stitching->>UserService: Batch User Requests (with timeout)
        
        alt Request within timeout
            UserService->>UserService: Process Request (same flow as above)
            UserService-->>Stitching: Return Data
        else Timeout exceeded
            UserService-->>Stitching: Timeout Error
        end
    end
    
    alt Query requires Expense data
        Stitching->>ExpenseService: Batch Expense Requests (with timeout)
        
        alt Request within timeout
            ExpenseService->>ExpenseService: Process Request (same flow as above)
            ExpenseService-->>Stitching: Return Data
        else Timeout exceeded
            ExpenseService-->>Stitching: Timeout Error
        end
    end
    
    Stitching-->>Client: Combined Response
    
    Note over Client,ExpenseDB: Hive Gateway with enhanced capabilities
    
    Client->>Hive: GraphQL Query
    Hive->>Registry: Validate Schema
    Registry-->>Hive: Schema Validation Result
    Hive->>Hive: Optimize Query Plan
    Hive->>Hive: Apply Caching Strategies
    
    alt Query requires User data
        Hive->>UserService: Optimized User Requests
        UserService->>UserService: Process User Request
        UserService-->>Hive: Return User Data
    end
    
    alt Query requires Expense data
        Hive->>ExpenseService: Optimized Expense Requests
        ExpenseService->>ExpenseService: Process Expense Request
        ExpenseService-->>Hive: Return Expense Data
    end
    
    Hive-->>Client: Optimized Combined Response